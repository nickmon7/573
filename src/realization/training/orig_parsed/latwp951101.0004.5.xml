<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="CoreNLP-to-HTML.xsl" type="text/xsl"?>
<root>
  <document>
    <sentences>
      <sentence id="1">
        <tokens>
          <token id="1">
            <word>But</word>
            <CharacterOffsetBegin>0</CharacterOffsetBegin>
            <CharacterOffsetEnd>3</CharacterOffsetEnd>
            <POS>CC</POS>
          </token>
          <token id="2">
            <word>he</word>
            <CharacterOffsetBegin>4</CharacterOffsetBegin>
            <CharacterOffsetEnd>6</CharacterOffsetEnd>
            <POS>PRP</POS>
          </token>
          <token id="3">
            <word>also</word>
            <CharacterOffsetBegin>7</CharacterOffsetBegin>
            <CharacterOffsetEnd>11</CharacterOffsetEnd>
            <POS>RB</POS>
          </token>
          <token id="4">
            <word>had</word>
            <CharacterOffsetBegin>12</CharacterOffsetBegin>
            <CharacterOffsetEnd>15</CharacterOffsetEnd>
            <POS>VBD</POS>
          </token>
          <token id="5">
            <word>an</word>
            <CharacterOffsetBegin>16</CharacterOffsetBegin>
            <CharacterOffsetEnd>18</CharacterOffsetEnd>
            <POS>DT</POS>
          </token>
          <token id="6">
            <word>uncanny</word>
            <CharacterOffsetBegin>19</CharacterOffsetBegin>
            <CharacterOffsetEnd>26</CharacterOffsetEnd>
            <POS>JJ</POS>
          </token>
          <token id="7">
            <word>knack</word>
            <CharacterOffsetBegin>27</CharacterOffsetBegin>
            <CharacterOffsetEnd>32</CharacterOffsetEnd>
            <POS>NN</POS>
          </token>
          <token id="8">
            <word>for</word>
            <CharacterOffsetBegin>33</CharacterOffsetBegin>
            <CharacterOffsetEnd>36</CharacterOffsetEnd>
            <POS>IN</POS>
          </token>
          <token id="9">
            <word>knowing</word>
            <CharacterOffsetBegin>37</CharacterOffsetBegin>
            <CharacterOffsetEnd>44</CharacterOffsetEnd>
            <POS>VBG</POS>
          </token>
          <token id="10">
            <word>where</word>
            <CharacterOffsetBegin>45</CharacterOffsetBegin>
            <CharacterOffsetEnd>50</CharacterOffsetEnd>
            <POS>WRB</POS>
          </token>
          <token id="11">
            <word>freeways</word>
            <CharacterOffsetBegin>51</CharacterOffsetBegin>
            <CharacterOffsetEnd>59</CharacterOffsetEnd>
            <POS>NNS</POS>
          </token>
          <token id="12">
            <word>and</word>
            <CharacterOffsetBegin>60</CharacterOffsetBegin>
            <CharacterOffsetEnd>63</CharacterOffsetEnd>
            <POS>CC</POS>
          </token>
          <token id="13">
            <word>shopping</word>
            <CharacterOffsetBegin>64</CharacterOffsetBegin>
            <CharacterOffsetEnd>72</CharacterOffsetEnd>
            <POS>NN</POS>
          </token>
          <token id="14">
            <word>centers</word>
            <CharacterOffsetBegin>73</CharacterOffsetBegin>
            <CharacterOffsetEnd>80</CharacterOffsetEnd>
            <POS>NNS</POS>
          </token>
          <token id="15">
            <word>would</word>
            <CharacterOffsetBegin>81</CharacterOffsetBegin>
            <CharacterOffsetEnd>86</CharacterOffsetEnd>
            <POS>MD</POS>
          </token>
          <token id="16">
            <word>sprout</word>
            <CharacterOffsetBegin>87</CharacterOffsetBegin>
            <CharacterOffsetEnd>93</CharacterOffsetEnd>
            <POS>VB</POS>
          </token>
          <token id="17">
            <word>.</word>
            <CharacterOffsetBegin>94</CharacterOffsetBegin>
            <CharacterOffsetEnd>95</CharacterOffsetEnd>
            <POS>.</POS>
          </token>
        </tokens>
        <parse>(ROOT (S (CC But) (NP (PRP he)) (ADVP (RB also)) (VP (VBD had) (NP (NP (DT an) (JJ uncanny) (NN knack)) (PP (IN for) (S (VP (VBG knowing) (SBAR (WHADVP (WRB where)) (S (NP (NP (NNS freeways)) (CC and) (NP (NN shopping) (NNS centers))) (VP (MD would) (VP (VB sprout)))))))))) (. .))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="4">had</dependent>
          </dep>
          <dep type="cc">
            <governor idx="4">had</governor>
            <dependent idx="1">But</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="4">had</governor>
            <dependent idx="2">he</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="4">had</governor>
            <dependent idx="3">also</dependent>
          </dep>
          <dep type="det">
            <governor idx="7">knack</governor>
            <dependent idx="5">an</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">knack</governor>
            <dependent idx="6">uncanny</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="4">had</governor>
            <dependent idx="7">knack</dependent>
          </dep>
          <dep type="prep">
            <governor idx="7">knack</governor>
            <dependent idx="8">for</dependent>
          </dep>
          <dep type="pcomp">
            <governor idx="8">for</governor>
            <dependent idx="9">knowing</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="16">sprout</governor>
            <dependent idx="10">where</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="16">sprout</governor>
            <dependent idx="11">freeways</dependent>
          </dep>
          <dep type="cc">
            <governor idx="11">freeways</governor>
            <dependent idx="12">and</dependent>
          </dep>
          <dep type="nn">
            <governor idx="14">centers</governor>
            <dependent idx="13">shopping</dependent>
          </dep>
          <dep type="conj">
            <governor idx="11">freeways</governor>
            <dependent idx="14">centers</dependent>
          </dep>
          <dep type="aux">
            <governor idx="16">sprout</governor>
            <dependent idx="15">would</dependent>
          </dep>
          <dep type="advcl">
            <governor idx="9">knowing</governor>
            <dependent idx="16">sprout</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="4">had</dependent>
          </dep>
          <dep type="cc">
            <governor idx="4">had</governor>
            <dependent idx="1">But</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="4">had</governor>
            <dependent idx="2">he</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="4">had</governor>
            <dependent idx="3">also</dependent>
          </dep>
          <dep type="det">
            <governor idx="7">knack</governor>
            <dependent idx="5">an</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">knack</governor>
            <dependent idx="6">uncanny</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="4">had</governor>
            <dependent idx="7">knack</dependent>
          </dep>
          <dep type="prepc_for">
            <governor idx="7">knack</governor>
            <dependent idx="9">knowing</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="16">sprout</governor>
            <dependent idx="10">where</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="16">sprout</governor>
            <dependent idx="11">freeways</dependent>
          </dep>
          <dep type="nn">
            <governor idx="14">centers</governor>
            <dependent idx="13">shopping</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">freeways</governor>
            <dependent idx="14">centers</dependent>
          </dep>
          <dep type="aux">
            <governor idx="16">sprout</governor>
            <dependent idx="15">would</dependent>
          </dep>
          <dep type="advcl">
            <governor idx="9">knowing</governor>
            <dependent idx="16">sprout</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="4">had</dependent>
          </dep>
          <dep type="cc">
            <governor idx="4">had</governor>
            <dependent idx="1">But</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="4">had</governor>
            <dependent idx="2">he</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="4">had</governor>
            <dependent idx="3">also</dependent>
          </dep>
          <dep type="det">
            <governor idx="7">knack</governor>
            <dependent idx="5">an</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">knack</governor>
            <dependent idx="6">uncanny</dependent>
          </dep>
          <dep type="dobj">
            <governor idx="4">had</governor>
            <dependent idx="7">knack</dependent>
          </dep>
          <dep type="prepc_for">
            <governor idx="7">knack</governor>
            <dependent idx="9">knowing</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="16">sprout</governor>
            <dependent idx="10">where</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="16">sprout</governor>
            <dependent idx="11">freeways</dependent>
          </dep>
          <dep type="nn">
            <governor idx="14">centers</governor>
            <dependent idx="13">shopping</dependent>
          </dep>
          <dep type="conj_and">
            <governor idx="11">freeways</governor>
            <dependent idx="14">centers</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="16">sprout</governor>
            <dependent idx="14">centers</dependent>
          </dep>
          <dep type="aux">
            <governor idx="16">sprout</governor>
            <dependent idx="15">would</dependent>
          </dep>
          <dep type="advcl">
            <governor idx="9">knowing</governor>
            <dependent idx="16">sprout</dependent>
          </dep>
        </dependencies>
      </sentence>
    </sentences>
  </document>
</root>
